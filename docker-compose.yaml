services:
  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: spring-petclinic
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NODE_ID: 1
      CLUSTER_ID: abcdefghijklmnopqrstuv
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
    ports:
      - "29092:29092"
      - "9092:9092"
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  spring-petclinic:
    image: spring-petclinic:latest
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    depends_on:
      - postgres
      - kafka
    ports:
      - "8080:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB_NAME: spring-petclinic
      KAFKA_BOOTSTRAP-SERVERS: kafka:29092
volumes:
  postgres_data:
  kafka_data:
